name: Build and Publish TimberAPI packs

on: 
  workflow_dispatch:
    inputs:
      DoPrerelease:
        description: 'Do a prerelease. If checked, does not push to NuGet.'
        required: true
        default: 'true'
        type: boolean
      PrereleaseSuffix:
        description: 'The suffix to add to the version number if a prerelease is done. (eg "alpha", "beta", "rc.1" etc)'
        required: false
        type: string

env:
  TimberApiProjectPath: "TimberAPI/TimberAPI.csproj"
  TimberApiOutputPath: "TimberAPI/bin/RELEASE/netstandard2.1"
  TimberApiNugetPath: "TimberAPI/bin/RELEASE"
  TimberAPIPackageDir: "TimberAPI/ThunderstorePackage"
  TimberApiExampleProjectPath: "TimberAPIExample/TimberAPIExample.csproj"
  TimberApiExampleOutputPath: "TimberAPIExample/bin/RELEASE/netstandard2.1"
  TimberApiExamplePackageDir: "TimberAPIExample/ThunderstorePackage"
  
jobs:
  PublishTimberAPINuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build TimberAPI
      run: dotnet build ${{env.TimberApiProjectPath}} --no-restore --configuration RELEASE
      
    - name: Test 
      run: dotnet test --no-build --verbosity normal
      
    - name: .NET - Get Project File ReleaseVersion
      id: get_version
      uses: greenygh0st/net-proj-release-version@v2
      with:
        PROJ_FILE: ${{env.TimberApiProjectPath}}
      
    - name: Pack TimberAPI
      run: dotnet pack ${{env.TimberApiProjectPath}} --configuration RELEASE -p:VersionPrefix=${{ steps.get_version.outputs.RELEASE_VERSION }} --version-suffix "${{ github.event.inputs.PrereleaseSuffix }}"
      
    - name: Upload TimberAPI Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: TimberAPINugetPackage
        path: ${{env.TimberApiNugetPath}}/*.nupkg
      
    - name: Push NuGet Package
      if: github.event.inputs.DoPrerelease != 'true'
      run: dotnet nuget push ${{env.TimberApiNugetPath}}/*.nupkg -k ${{ secrets.TIMBERAPINUGETKEY }} -s https://api.nuget.org/v3/index.json
 
  CreateTimberAPIThunderstorePack:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build TimberAPI
      run: dotnet build ${{env.TimberApiProjectPath}} --no-restore --configuration RELEASE
      
    - name: .NET - Get Project File ReleaseVersion
      id: get_version
      uses: greenygh0st/net-proj-release-version@v2
      with:
        PROJ_FILE: ${{env.TimberApiProjectPath}}

    - name: Copy TimberAPI.dll to package folder
      run: cp ${{ env.TimberApiOutputPath }}/TimberAPI.dll ${{ env.TimberAPIPackageDir }}/TimberAPI/plugins
           
    - name: Edit Version number in manifest
      run: sed -i 's/VERSION/${{ steps.get_version.outputs.RELEASE_VERSION }}/' ${{ env.TimberAPIPackageDir }}/manifest.json

    - name: Copy README to package folder
      run: cp README.md ${{ env.TimberAPIPackageDir }}
      
    - name: Upload TimberAPI Thunderstore Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: TimberAPI
        path: ${{ env.TimberAPIPackageDir }} 
        
  CreateTimberAPIExampleThunderstorePack:
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build TimberAPIExample
      run: dotnet build ${{env.TimberApiExampleProjectPath}} --no-restore --configuration RELEASE
      
    - name: .NET - Get Project File ReleaseVersion
      id: get_version
      uses: greenygh0st/net-proj-release-version@v2
      with:
        PROJ_FILE: ${{env.TimberApiProjectPath}}

    - name: Copy TimberAPIExample.dll to package folder
      run: cp ${{ env.TimberApiExampleOutputPath }}/TimberAPIExample.dll ${{ env.TimberApiExamplePackageDir }}/TimberAPIExample/plugins
                
    - name: Edit TimberAPI Dependency string
      run: sed -i 's/VERSION/${{ steps.get_version.outputs.RELEASE_VERSION }}/' ${{ env.TimberApiExamplePackageDir }}/manifest.json

    - name: Copy README to package folder for TimberAPIExample
      run: cp README.md ${{ env.TimberApiExamplePackageDir }}
           
    - name: Modify README for TimberAPIExample
      run: sed -i 's/# TimberAPI/# TimberAPIExample/' ${{ env.TimberApiExamplePackageDir }}/README.md      
    - name: Modify README for TimberAPIExample
      run: sed -i 's/Unofficial API to enable easier Timberborn modding/The example plugin for TimberAPI/' ${{ env.TimberApiExamplePackageDir }}/README.md      
    - name: Modify README for TimberAPIExample
      run: sed -i 's/Currently supported features/Shows the following features/' ${{ env.TimberApiExamplePackageDir }}/README.md
    
    - name: Upload TimberAPIExample Thunderstore Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        name: TimberAPIExample
        path: ${{ env.TimberApiExamplePackageDir }}
      
